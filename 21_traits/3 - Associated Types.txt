// -------------------------------------------
// 	        Trait Objects Limitations
// 			    1. Multiple Traits
//          			2. Associated Types
// -------------------------------------------

trait Drawable {
    type SomeType;
    fn draw(&self);
}
struct Circle {
    x: f64,
    y: f64,
    radius: f64,
}
struct Square {
    x: f64,
    y: f64,
    side: f64,
}
impl Drawable for Circle {
    type SomeType = f64;
    fn draw(&self) {
        println!(
            "Drawing a circle at ({}, {}), radius {}",
            self.x, self.y, self.radius
        );
    }
}
impl Drawable for Square {
    type SomeType = f32;
    fn draw(&self) {
        println!(
            "Drawing a square at ({}, {}), side {}",
            self.x, self.y, self.side
        );
    }
}

fn draw(obj: &dyn Drawable<SomeType = f64>) {
    obj.draw();
}

fn draw_1(obj: &dyn Drawable<SomeType = f32>) {
    obj.draw();
}
fn main() {
    let circle = Circle {
        x: 5.0,
        y: 6.0,
        radius: 6.0,
    };

    let square = Square {
        x: 2.0,
        y: 3.0,
        side: 6.0,
    };

    draw(&circle);
    draw_1(&square);
}
