// -------------------------------------------
// 	        Sealed Traits
// -------------------------------------------

use rust_course::my_module::{MyType1, NonSealedTrait, SomeTrait};
struct MyType2;
// impl SomeTrait for MyType2 {
//     fn some_fn(&self) {
//         println!("External Code");
//     }
// }

impl NonSealedTrait for MyType2 {
    fn open_for_implementation() {
        println!("I can be implemented");
    }
}
fn main() {
    let item1 = MyType1;
    item1.some_fn();
}



// Code for library 



pub mod my_module {
    use private_mod::Sealed;

    pub trait SomeTrait: Sealed {
        fn some_fn(&self);
    }

    pub trait NonSealedTrait {
        fn open_for_implementation();
    }
    mod private_mod {
        pub trait Sealed {}
    }

    pub struct MyType1;
    impl SomeTrait for MyType1 {
        fn some_fn(&self) {
            println!("You can access me");
        }
    }

    impl Sealed for MyType1 {}
}


