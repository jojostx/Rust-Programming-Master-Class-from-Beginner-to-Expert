// -------------------------------------------
// 	        Trait Objects Limitations
// 			    1. Multiple Traits
// -------------------------------------------

trait Drawable {
    fn draw(&self);
}

trait Movable {
    fn move_to(&mut self, x: f64, y: f64);
}

struct Circle {
    x: f64,
    y: f64,
    radius: f64,
}

struct Square {
    x: f64,
    y: f64,
    side: f64,
}

impl Drawable for Circle {
    fn draw(&self) {
        println!(
            "Drawing a circle at ({}, {}), radius {}",
            self.x, self.y, self.radius
        );
    }
}

impl Movable for Circle {
    fn move_to(&mut self, x: f64, y: f64) {
        self.x = x;
        self.y = y;
        println!("Moved circle to ({}, {})", self.x, self.y);
    }
}

impl Drawable for Square {
    fn draw(&self) {
        println!(
            "Drawing a square at ({}, {}), side {}",
            self.x, self.y, self.side
        );
    }
}

impl Movable for Square {
    fn move_to(&mut self, x: f64, y: f64) {
        self.x = x;
        self.y = y;
        println!("Moved square to ({}, {})", self.x, self.y);
    }
}

// trait A {}
// impl A for Circle {}
// impl A for Square {}
trait DrawableMovable: Drawable + Movable {}
impl DrawableMovable for Circle {}
impl DrawableMovable for Square {}

// vtable 1: Drawable for Circle
// vtable 2: Drawable for Square
// vtable 3: Movable for Circle
// vtable 4: Movable for Square

// vtable 1: DrawableMovable for Circle
// vtable 2: DrawableMovable for Square

fn move_and_draw(obj: &mut dyn DrawableMovable, x: f64, y: f64) {
    obj.move_to(x, y);
    obj.draw();
}

fn main() {}
